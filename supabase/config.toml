# Pre podrobnú dokumentáciu o konfigurácii navštívte:
# https://supabase.com/docs/guides/local-development/cli/config
# Reťazec používaný na rozlíšenie rôznych Supabase projektov na tom istom hostiteľovi. Predvolene sa používa
# názov pracovného adresára pri spustení `supabase init`.
project_id = "sasstemplate"

[api]
enabled = true
# Port na použitie pre API URL.
port = 54321
# Schémy na vystavenie vo vašom API. Tabuľky, pohľady a uložené procedúry v tejto schéme získajú API
# koncové body. `public` a `graphql_public` schémy sú zahrnuté predvolene.
schemas = ["public", "graphql_public"]
# Extra schémy na pridanie do search_path každého požiadavku.
extra_search_path = ["public", "extensions"]
# Maximálny počet riadkov vrátených z pohľadu, tabuľky alebo uloženej procedúry. Obmedzuje veľkosť payload
# pre náhodné alebo škodlivé požiadavky.
max_rows = 1000

[api.tls]
# Povoliť HTTPS koncové body lokálne pomocou samopodpísaného certifikátu.
enabled = false

[db]
# Port na použitie pre lokálnu databázu URL.
port = 54322
# Port používaný príkazom db diff na inicializáciu tieňovej databázy.
shadow_port = 54320
# Hlavná verzia databázy na použitie. Musí byť rovnaká ako vaša vzdialená databáza. Spustite `SHOW
# server_version;` na vzdialenej databáze pre kontrolu.
major_version = 15

[db.pooler]
enabled = false
# Port na použitie pre lokálny connection pooler.
port = 54329
# Určuje, kedy možno serverové pripojenie znovu použiť inými klientmi.
# Nakonfigurujte jeden z podporovaných režimov poolera: `transaction`, `session`.
pool_mode = "transaction"
# Koľko serverových pripojení povoliť na pár používateľ/databáza.
default_pool_size = 20
# Maximálny počet klientskych pripojení povolených.
max_client_conn = 100

[db.seed]
# Ak je povolené, naočkuje databázu po migráciách počas db reset.
enabled = true
# Určuje usporiadaný zoznam súborov na načítanie počas db reset.
# Podporuje glob patterns relatívne k supabase adresáru: './seeds/*.sql'
sql_paths = ['./seed.sql']

[realtime]
enabled = true
# Naviazať realtime cez IPv4 alebo IPv6. (predvolené: IPv4)
# ip_version = "IPv6"
# Maximálna dĺžka v bajtoch HTTP požiadavkových hlavičiek. (predvolené: 4096)
# max_header_length = 4096

[studio]
enabled = true
# Port na použitie pre Supabase Studio.
port = 54323
# Externá URL API servera, ku ktorému sa pripája frontend.
api_url = "http://127.0.0.1"
# OpenAI API kľúč na použitie pre Supabase AI v Supabase Studio.
openai_api_key = "env(OPENAI_API_KEY)"

# Email testovací server. Emaily odoslané s lokálnym dev setupom sa skutočne neodosielajú - namiesto toho
# sa monitorujú a môžete si pozrieť emaily, ktoré by sa poslali z webového rozhrania.
[inbucket]
enabled = true
# Port na použitie pre webové rozhranie email testovacieho servera.
port = 54324
# Odkomentujte pre vystavenie ďalších portov na testovanie používateľských aplikácií, ktoré posielajú emaily.
# smtp_port = 54325
# pop3_port = 54326
# admin_email = "admin@email.com"
# sender_name = "Admin"

[storage]
enabled = true
# Maximálna povolená veľkosť súboru (napr. "5MB", "500KB").
file_size_limit = "50MiB"

# API transformácie obrázkov je dostupné pre Supabase Pro plán.
# [storage.image_transformation]
# enabled = true

# Odkomentujte pre konfiguráciu lokálnych storage bucketov
# [storage.buckets.images]
# public = false
# file_size_limit = "50MiB"
# allowed_mime_types = ["image/png", "image/jpeg"]
# objects_path = "./images"

[auth]
enabled = true
# Základná URL vašej webovej stránky. Používa sa ako allow-list pre presmerovania a na konštrukciu URL používaných
# v emailoch.
site_url = "http://localhost:3000"
# Zoznam *presných* URL, na ktoré majú poskytovatelia auth povolené presmerovať po autentifikácii.
additional_redirect_urls = ["https://127.0.0.1:3000/**", "http://localhost:3000/**", "https://localhost:3000/**"]
# Ako dlho sú tokeny platné, v sekundách. Predvolené 3600 (1 hodina), maximum 604,800 (1 týždeň).
jwt_expiry = 3600
# Ak je zakázané, refresh token nikdy nevyprší.
enable_refresh_token_rotation = true
# Povolí opätovné použitie refresh tokenov po vypršaní, až do určeného intervalu v sekundách.
# Vyžaduje enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Povoliť/zakázať nové registrácie používateľov do vášho projektu.
enable_signup = true
# Povoliť/zakázať anonymné prihlásenia do vášho projektu.
enable_anonymous_sign_ins = false
# Povoliť/zakázať testovanie manuálneho prepojenia účtov
enable_manual_linking = false
# Heslá kratšie ako táto hodnota budú zamietnuté ako slabé. Minimum 6, odporúčané 8 alebo viac.
minimum_password_length = 6
# Heslá, ktoré nespĺňajú tieto požiadavky, budú zamietnuté ako slabé. Podporované hodnoty
# sú: `letters_digits`, `lower_upper_letters_digits`, `lower_upper_letters_digits_symbols`
password_requirements = ""

[auth.email]
# Povoliť/zakázať nové registrácie používateľov cez email do vášho projektu.
enable_signup = true
# Ak je povolené, používateľ bude musieť potvrdiť akúkoľvek zmenu emailu na starej aj novej emailovej
# adrese. Ak je zakázané, iba nový email je potrebný na potvrdenie.
double_confirm_changes = true
# Ak je povolené, používatelia musia potvrdiť svoju emailovú adresu pred prihlásením.
enable_confirmations = true
# Ak je povolené, používatelia budú musieť znovu autentifikovať alebo sa nedávno prihlásiť na zmenu hesla.
secure_password_change = false
# Kontroluje minimálne množstvo času, ktoré musí prejsť pred odoslaním ďalšieho potvrdenia registrácie alebo reset hesla.
max_frequency = "1m0s"
# Počet znakov použitých v email OTP.
otp_length = 6
# Počet sekúnd pred vypršaním email OTP (predvolené 1 hodina).
otp_expiry = 3600

# Použiť produkčne pripravený SMTP server
# [auth.email.smtp]
# enabled = true
# host = "smtp.sendgrid.net"
# port = 587
# user = "apikey"
# pass = "env(SENDGRID_API_KEY)"
# admin_email = "admin@email.com"
# sender_name = "Admin"

# Odkomentujte pre prispôsobenie email šablóny
# [auth.email.template.invite]
# subject = "You have been invited"
# content_path = "./supabase/templates/invite.html"

[auth.sms]
# Povoliť/zakázať nové registrácie používateľov cez SMS do vášho projektu.
enable_signup = false
# Ak je povolené, používatelia musia potvrdiť svoje telefónne číslo pred prihlásením.
enable_confirmations = false
# Šablóna na odoslanie OTP používateľom
template = "Your code is {{ .Code }}"
# Kontroluje minimálne množstvo času, ktoré musí prejsť pred odoslaním ďalšieho sms otp.
max_frequency = "5s"

# Použiť preddefinovanú mapu telefónneho čísla na OTP pre testovanie.
# [auth.sms.test_otp]
# 4152127777 = "123456"

# Konfigurácia timeoutov prihlásených relácií.
# [auth.sessions]
# Vynútiť odhlásenie po uplynutí špecifikovanej doby.
# timebox = "24h"
# Vynútiť odhlásenie ak bol používateľ neaktívny dlhšie ako špecifikovaná doba.
# inactivity_timeout = "8h"

# Tento hook beží pred vydaním tokenu a umožňuje pridať dodatočné claims na základe použitej autentifikačnej metódy.
# [auth.hook.custom_access_token]
# enabled = true
# uri = "pg-functions://<database>/<schema>/<hook_name>"

# Nakonfigurujte jedného z podporovaných SMS poskytovateľov: `twilio`, `twilio_verify`, `messagebird`, `textlocal`, `vonage`.
[auth.sms.twilio]
enabled = false
account_sid = ""
message_service_sid = ""
# NEODOVZDÁVAJTE váš Twilio auth token do gitu. Použite substitúciu environment premennej namiesto toho:
auth_token = "env(SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN)"

# Multi-factor-authentication je dostupná pre Supabase Pro plán.
[auth.mfa]
# Kontroluje koľko MFA faktorov môže byť zaregistrovaných naraz na používateľa.
max_enrolled_factors = 10

# Kontrola MFA cez App Authenticator (TOTP)
[auth.mfa.totp]
enroll_enabled = true
verify_enabled = true

# Konfigurácia MFA cez Phone Messaging
[auth.mfa.phone]
enroll_enabled = false
verify_enabled = false
otp_length = 6
template = "Your code is {{ .Code }}"
max_frequency = "5s"

# Konfigurácia MFA cez WebAuthn
# [auth.mfa.web_authn]
# enroll_enabled = true
# verify_enabled = true

# Použiť externého OAuth poskytovateľa. Kompletný zoznam poskytovateľov: `apple`, `azure`, `bitbucket`,
# `discord`, `facebook`, `github`, `gitlab`, `google`, `keycloak`, `linkedin_oidc`, `notion`, `twitch`,
# `twitter`, `slack`, `spotify`, `workos`, `zoom`.
[auth.external.apple]
enabled = false
client_id = ""
# NEODOVZDÁVAJTE secret vášho OAuth poskytovateľa do gitu. Použite substitúciu environment premennej namiesto toho:
secret = "env(SUPABASE_AUTH_EXTERNAL_APPLE_SECRET)"
# Prepisuje predvolenú auth redirectUrl.
redirect_uri = ""
# Prepisuje predvolenú auth poskytovateľ URL. Používa sa na podporu self-hosted gitlab, single-tenant Azure,
# alebo akéhokoľvek iného third-party OIDC poskytovateľa.
url = ""
# Ak je povolené, kontrola nonce bude preskočená. Vyžadované pre lokálne prihlásenie s Google auth.
skip_nonce_check = false

# Použiť Firebase Auth ako third-party poskytovateľa spolu s Supabase Auth.
[auth.third_party.firebase]
enabled = false
# project_id = "my-firebase-project"

# Použiť Auth0 ako third-party poskytovateľa spolu s Supabase Auth.
[auth.third_party.auth0]
enabled = false
# tenant = "my-auth0-tenant"
# tenant_region = "us"

# Použiť AWS Cognito (Amplify) ako third-party poskytovateľa spolu s Supabase Auth.
[auth.third_party.aws_cognito]
enabled = false
# user_pool_id = "my-user-pool-id"
# user_pool_region = "us-east-1"

[edge_runtime]
enabled = true
# Nakonfigurujte jeden z podporovaných politík požiadaviek: `oneshot`, `per_worker`.
# Použite `oneshot` pre hot reload, alebo `per_worker` pre load testing.
policy = "oneshot"
# Port na pripojenie Chrome inšpektora pre debugging edge funkcií.
inspector_port = 8083

# Použite tieto konfigurácie na prispôsobenie vašej Edge Function.
# [functions.MY_FUNCTION_NAME]
# enabled = true
# verify_jwt = true
# import_map = "./functions/MY_FUNCTION_NAME/deno.json"
# Odkomentujte pre špecifikáciu vlastnej cesty k súboru entrypoint.
# Podporované prípony súborov: .ts, .js, .mjs, .jsx, .tsx
# entrypoint = "./functions/MY_FUNCTION_NAME/index.ts"

[analytics]
enabled = true
port = 54327
# Nakonfigurujte jeden z podporovaných backendov: `postgres`, `bigquery`.
backend = "postgres"

# Experimentálne funkcie môžu byť kedykoľvek zastarané
[experimental]
# Konfiguruje Postgres storage engine na použitie OrioleDB (S3)
orioledb_version = ""
# Konfiguruje S3 bucket URL, napr. <bucket_name>.s3-<region>.amazonaws.com
s3_host = "env(S3_HOST)"
# Konfiguruje S3 bucket región, napr. us-east-1
s3_region = "env(S3_REGION)"
# Konfiguruje AWS_ACCESS_KEY_ID pre S3 bucket
s3_access_key = "env(S3_ACCESS_KEY)"
# Konfiguruje AWS_SECRET_ACCESS_KEY pre S3 bucket
s3_secret_key = "env(S3_SECRET_KEY)"
